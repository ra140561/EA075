ERROR_NF: .ASCIZ "END Character not found! :-("

@THE ONE CHAR CONVERTER
   	 @VALUES SET
   	 MOV R7, #0x41   	 @HOLDS THE FIRST CHARACTER TO BE CONVERTED (A EQUALS 0x41)
   	 MOV R6, #1   		 @CONSTANT FOR COMPARISON
   	 MOV R3, #20   		 @HOLDS THE OFFSET TO THE REACH THE SPACE CHARACTER
   	 MOV R4, #10   		 @HOLDS THE OFFSET TO THE REACH THE Q CHARACTER

	 @ENCODING BEGINS HERE
   	 MOV R5, #1   		 @OFFSET RESET OF BLUE BUTTON POS. CALCULATED AT POS-1,2
	 SWI 0x202   		 @ALWAYS CHECKS THE RIGHT BLACK BUTTON
   	 CMP R0, #1
   	 BEQ AtoP   		 @IF R0 == 1 THE RIGHT BUTTON WAS PRESSED, if R0 != 1 THEN QtoZ
   	 
QtoZ:
	 SWI 0x203   		 @CHECKS THE BLUE BUTTONS
   	 
   	 @SEARCHES FOR SPACE CHAR
   	 CMP R0, #1024
	 MOVEQ R0, #0
	 MOVEQ R1, #0
   	 SWIEQ 0x205   		 @PRINTS THE INTEGER
   	 BEQ END_OK
   	 
   	 ADD R2, R4, R7   	 @R2 := THE "Q" LETTER STARTING POSITION, LATER R2 := R2 + OFFSET
   	 
   	 @CHECKS THE "Q" CHAR
   	 CMP R0, #1   		 @IF IS NOT SPACE, SO AFTER SWI(203) R0 IS SET
	 MOVEQ R0, #0
	 MOVEQ R1, #0
	 SWIEQ 0x205   		 @PRINTS THE INTEGER
   	 BEQ END_OK			 @"Q" IS FOUND

   		 @HERE IF NEITHER "Q" OR "SPACE" IS THE PRESSED KEY THEN SEARCHES THE NEXT CHARACTER
    POS1:CMP R6, R0, LSR R5    @SHIFTS R0 BY R5 BITS TO THE RIGHT THEN COMPARES TO 1 (R6 = 1)
   		 ADDEQ R2, R2, R5
		 MOVEQ R0, #0
		 MOVEQ R1, #0
   		 SWIEQ 0x205   		 @PRINTS THE INTEGER
   		 BEQ END_OK
   		 
   		 ADD R5, R5, #1   	 @ADJUSTS OFFSET FOR THE NEXT CHAR TO BE TESTED
   		 
   		 CMP R5, #10   		 @CHECK IF REACHED "SPACE" CHAR POSITION ("SPACE" CHAR WAS TESTED ALREADY)
   		 MOVEQ R5, #15   	 @THEN JUMPS TO THE ONLY CHAR POSSIBLE "GREATER" THAN Z, THE "END" CHAR
   		 BEQ TERMINATE
   					 
   		 CMP R5, #16   		 @IF REACHED 16 POSITIONS OF OFFSET THEN CHAR NOT FOUND
   		 BHS END_err
   		 
   		 B POS1   			 @GO FOR NEXT CHAR
   	 
TERMINATE:
		 CMP R6, R0, LSR R5    @CHECKS THE END CHARACTER
   		 BEQ END_OK
   		 B END_err
   	 
AtoP:
     SWI 0x203   		 @CHECKS THE BLUE BUTTONS
   	 
   	 MOV R2, R7   	 @R2 := THE "A" LETTER STARTING POSITION, LATER R2 := R2 + OFFSET
   	 
   	 @CHECKS THE "A" CHAR
   	 CMP R0, #1   		 @CHECKS FIRST CHAR
	 MOVEQ R0, #0
	 MOVEQ R1, #0
   	 SWIEQ 0x205   		 @PRINTS THE INTEGER (0X41, OR 65D)
   	 BEQ END_OK			 @"A" IS FOUND, THEN GOES FOR THE NEXT CHARACTER

   		 @HERE IF "A" IS NOT THE PRESSED KEY THEN SEARCHES THE NEXT CHARACTER
    POS2:CMP R6, R0, LSR R5    @SHIFTS R0 BY R5 BITS TO THE RIGHT THEN COMPARES TO 1 (R6 = 1)
   		 ADDEQ R2, R2, R5
		 MOVEQ R0, #0
		 MOVEQ R1, #0
   		 SWIEQ 0x205   		 @PRINTS THE INTEGER
   		 BEQ END_OK
   		 
   		 ADD R5, R5, #1   	 @ADJUSTS OFFSET FOR THE NEXT CHAR TO BE TESTED
   											 
   		 CMP R5, #16   		 @IF REACHED 16 POSITIONS OF OFFSET THEN CHAR NOT FOUND
   		 BHS END_err
   		 
   		 B POS2   			 @GO FOR NEXT CHAR

@=====================================ENDING SECTION=====================================
END_OK:     B FINISH

   		 @CHAR NOT FOUND WRITING
END_err:
		 MOV R0, #6   		 @CENTER OF LINE
   		 MOV R1, #14   		 @LAST LINE
   		 LDR R2, =ERROR_NF    @ERROR MESSAGE
   		 SWI 0x204   		 @DISPLAY MESSAGE
   		 
FINISH:   	 EOR R7, R7, R7
